name: linux

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Setup spack
      run: |
        mkdir ${GITHUB_WORKSPACE}/../spack
        cd ${GITHUB_WORKSPACE}/../spack
        git clone --depth 1 https://github.com/key4hep/spack .
        cp -r ${GITHUB_WORKSPACE} var/spack/repos/
        cp var/spack/repos/$(basename ${GITHUB_REPOSITORY})/config/packages.yaml etc/spack
        source share/spack/setup-env.sh
        spack repo add --scope site ${PWD}/var/spack/repos/$(basename ${GITHUB_REPOSITORY})
    - name: Concretize key4hep-stack
      run: |
        cd ${GITHUB_WORKSPACE}/../spack
        #source share/spack/setup-env.sh
        #spack compiler find --scope site
        # spack spec -I key4hep-stack | tee -a key4hep-stack-concretization.log
        echo "abd" > key4hep-stack-concretization.log
        export KCON=$(cat key4hep-stack-concretization.log)
        echo "action_state=yellow" >> $GITHUB_ENV
        #echo "KCON=${KCON}" >> $GITHUB_ENV
    - name: Comment PR 
      run: |
        cd ${GITHUB_WORKSPACE}/../spack
        echo "abd" > key4hep-stack-concretization.log
        generate_post_data()
        {
          cat <<EOF
        {
          "body": "$(cat key4hep-stack-concretization.log | sed -z 's/\n/\\n/g')"
        }
        EOF
        }
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        curl -s -H "Authorization: token ${KEY4HEP_COMMENT_BOT_TOKEN}" \
         -X POST -d "$(generate_post_data)"  \
         "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/comments"

    - name: 'Comment PR'
      uses: actions/github-script@0.3.0
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        #teststr: ${{ env.action_state }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.issues.createComment({ issue_number, owner, repo, body: 'test123' });
          #github.issues.createComment({ issue_number, owner, repo, body: teststr });
          #github.issues.createComment({ issue_number, owner, repo, body: "${{ env.KCON }}" });

