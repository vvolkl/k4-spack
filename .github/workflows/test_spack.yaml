name: k4CITests
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cvmfs-contrib/github-action-cvmfs@v2
      with:
        cvmfs_repositories: 'sw.hsf.org,sw-nightlies.hsf.org,sft-nightlies.cern.ch,sft.cern.ch,geant4.cern.ch'
    - name: Start container
      run: |
        docker run -it --name CI_container -e GITHUB_ENV=${GITHUB_ENV}  -v ${GITHUB_WORKSPACE}:/Package -v /cvmfs:/cvmfs:shared -d clicdp/cc7-lcg /bin/bash
    - name: Setup container
      run: |
        docker exec CI_container /bin/bash -c " ln -s /usr/lib64/liblzma.so.5.2.2 /usr/lib64/liblzma.so;"

    - name: Setup Spack
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package;\
        curl -L -o spack.tar.gz https://gitlab.cern.ch/key4hep/k4-deploy/-/jobs/artifacts/release/raw/key4hep-spack_centos7-cvmfs.tar.gz?job=setup_spack_push;\
        tar xfz spack.tar.gz && rm spack.tar.gz;'
    - name: Concretize
      run: |
        docker exec CI_container /bin/bash -c 'cd ./Package;\
        source spack/share/spack/setup-env.sh;\
        spack spec -I key4hep-stack | tee -a key4hep-stack-concretization.log;'
    - name: Comment PR 
      env:
        KEY4HEP_COMMENT_BOT_TOKEN: ${{ secrets.KEY4HEP_COMMENT_BOT_TOKEN }}
      run: |
        cd ${GITHUB_WORKSPACE}
        grep "^ -" key4hep-stack-concretization.log > key4hep-stack-concretization-newpackages.log
        echo "## New packages at next release after merge:" > gh-pr-comment.log
        echo " " >> gh-pr-comment.log
        echo "\`\`\`" >> gh-pr-comment.log
        cat key4hep-stack-concretization-newpackages.log >> gh-pr-comment.log
        echo "\`\`\`" >> gh-pr-comment.log
        echo " " >> gh-pr-comment.log
        echo "## Full List of Packages: " >> gh-pr-comment.log
        echo " " >> gh-pr-comment.log
        echo "<details>" >> gh-pr-comment.log
        echo " " >> gh-pr-comment.log
        echo "\`\`\`" >> gh-pr-comment.log
        cat key4hep-stack-concretization.log >> gh-pr-comment.log
        echo "\`\`\`" >> gh-pr-comment.log
        echo " " >> gh-pr-comment.log
        echo "</details>" >> gh-pr-comment.log
        generate_post_data()
        {
          cat <<EOF
        {
          "body": "$(cat gh-pr-comment.log | sed -z 's/\n/\\n/g')"
        }
        EOF
        }
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        curl -s -H "Authorization: token ${KEY4HEP_COMMENT_BOT_TOKEN}" \
         -X POST -d "$(generate_post_data)"  \
         "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/comments"

